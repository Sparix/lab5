/** Class Sentence creates object and divides it into array of words and punctuations.
 *
 * @version 1.0 10 June 2020.
 */


public class Sentence {
	private Word[] data;
	private Punct[] data1;

	Sentence(String sentenceString) {
		sentenceString = sentenceString.trim();
		int wordCounter;
		wordCounter = 1;
		char symbol;
		int punctuationCounter = 1;

		// Знаходимо кількість символів пунктуації і кількість слів в даному реченні
		for (int i = 0; i < sentenceString.length(); i++) {
			symbol = sentenceString.charAt(i);
			if (sentenceString.charAt(i) == ' ') wordCounter++;
			if ((symbol == '.') | (symbol == ',') | (symbol == '!') | (symbol == '?') | (symbol == '/') | (symbol == ':'))
				punctuationCounter++;
		}

		// Створюємо масив об'єктів класу Word
		Word[] word = new Word[wordCounter];

		// Створюємо масив об'єктів класу Punct
		Punct[] punctuation = new Punct[punctuationCounter];
		punctuationCounter = 0;

		// Ствоюємо об'єкти Word Punct однойменних масивів
		for (int i = 0; i < sentenceString.length(); i++) {
			symbol = sentenceString.charAt(i);
			if (((i > 1) & (i < sentenceString.length() - 1)) && ((sentenceString.charAt(i - 1) == ' ') &
					((sentenceString.charAt(i + 1)) == ' ') & (sentenceString.charAt(i) == '-'))) {
				punctuation[punctuationCounter] = new Punct('-');
				punctuationCounter++;
				sentenceString = sentenceString.replaceFirst(sentenceString.substring(i - 1, i + 1), "".trim());
			} else if ((symbol == '.') | (symbol == ',') | (symbol == '!') | (symbol == '?') | (symbol == ':')) {
				punctuation[punctuationCounter] = new Punct(symbol);
				punctuationCounter++;
				sentenceString = sentenceString.replaceFirst("//" + sentenceString.substring(i, i + 1), "".trim());
			}
		}
		sentenceString = sentenceString.replace(".", "");
		String[] l = sentenceString.split(" ");
		for (int i = 0; i < l.length; i++) {
			word[i] = new Word(l[i].trim());
		}

		data = word;
		data1 = punctuation;
	}

	// Метод передає масив слів у заданому речення
	Word[] getWord() {
		return data;
	}

	// Метод передає масив знаків пунктуації у заданому реченні
	public Punct[] getPunct() {
		return data1;
	}

	// Метод передає кількість слів у заданому реченні
	public int wordNumber() {
		return data.length;
	}

	// Метод передає кількість символів пунктуації а заданому реченні
	public int punctuationNumber() {
		return data1.length;
	}

	// Метод повертає задане речення
	String GetSen() {
		String sentence = "";
		for (Word aData : data) {
			if (aData != null)
				sentence = sentence.concat(aData.getWord() + " ");
		}
		return sentence;
	}

}
